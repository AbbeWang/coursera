cacheSweave
gbm
?gbm
??gbm
a <- available.packages()
head(rownames(a), 5)
length(a)
install.packages("slidify")
install.packages("ggplot2")
install.packages("slidify")
library(ggplot2)
search()
install.packages("KernSmooth")
library(KernSmooth)
clear
clean
library(swirl)
swirl()
5+7
x <- 5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div<- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
1:20
pi:10
15:1
?:
?`:`
seq(1,20)
seq(1,10, by=0.5)
seq(1, 10, by=0.5)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq<-seq(5, 10, length=30)
my_seq
lenght(my_seq)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times=10)
rep(c(0, 1, 2), each = 10)
num_vect(0.5, 55, -10, 6)
num_vect<- c(0.5, 55, -10, 6)
tf<-num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Hernani")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep = "-")
setwd("~/Coursera/The_DataScience_R/02-R_Programming/ProgrammingAssignment03/rprog-data-ProgAssignment3")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncols(outcome)
ncol(outcome)
nrow(outcome)
names(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[,11])
names(outcome)
names(outcome)[1] <- "number"
names(outcome)
best <- function(state, outcome) {                ## Validate the outcome string        outcomes = c("heart attack", "heart failure", "pneumonia")        if(outcome %in% outcomes == FALSE) {                stop("invalid outcome")        }                ## Read outcome data                data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")                ## Filter and simplify the column names        ## 2. Hospital Name: varchar (50) Lists the name of the hospital.        ## 7. State: varchar (2) Lists the 2 letter State code in which the hospital is located.        ## 11. Hospital 30-Day Death (Mortality) Rates from Heart Attack: Lists the risk adjusted rate (percentage) for each hospital.        ## 17. Hospital 30-Day Death (Mortality) Rates from Heart Failure: Lists the risk adjusted rate (percentage) for each hospital.        ## 23. Hospital 30-Day Death (Mortality) Rates from Pneumonia: Lists the risk adjusted rate (percentage) for each hospital.        data <- data[c(2, 7, 11, 17, 23)]        names(data)[1] <- "name"        names(data)[2] <- "state"        names(data)[3] <- "heart attack"        names(data)[4] <- "heart failure"        names(data)[5] <- "pneumonia"                ## Validating the state name given in the input        states <- data[, 2]        states <- unique(states)        if(state %in% states == FALSE ) {                stop("invalid state")        }                ## Grab only rows with our state value                data <- data[data$state==state & data[outcome] != 'Not Available',  ]        vals <- data[, outcome]        rowNum <- which.min(vals)        ## Return hospital name in that state with lowest 30-day death rate        data[rowNum, ]$name        }
best <- function(state, outcome) {                ## Validate the outcome string        outcomes = c("heart attack", "heart failure", "pneumonia")        if(outcome %in% outcomes == FALSE) {                stop("invalid outcome")        }                ## Read outcome data                data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")                ## Filter and simplify the column names        ## 2. Hospital Name: varchar (50) Lists the name of the hospital.        ## 7. State: varchar (2) Lists the 2 letter State code in which the hospital is located.        ## 11. Hospital 30-Day Death (Mortality) Rates from Heart Attack: Lists the risk adjusted rate (percentage) for each hospital.        ## 17. Hospital 30-Day Death (Mortality) Rates from Heart Failure: Lists the risk adjusted rate (percentage) for each hospital.        ## 23. Hospital 30-Day Death (Mortality) Rates from Pneumonia: Lists the risk adjusted rate (percentage) for each hospital.        data <- data[c(2, 7, 11, 17, 23)]        names(data)[1] <- "name"        names(data)[2] <- "state"        names(data)[3] <- "heart attack"        names(data)[4] <- "heart failure"        names(data)[5] <- "pneumonia"                ## Validating the state name given in the input        states <- data[, 2]        states <- unique(states)        if(state %in% states == FALSE ) {                stop("invalid state")        }                ## Grab only rows with our state value                data <- data[data$state==state & data[outcome] != 'Not Available',  ]        vals <- data[, outcome]        rowNum <- which.min(vals)        ## Return hospital name in that state with lowest 30-day death rate        data[rowNum, ]$name        }
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomes = c("heart attack", "heart failure", "pneumonia")
if(outcome %in% outcomes == FALSE) {
stop("invalid outcome")
}
best <- function(state, outcome) {
## Validate the outcome string
outcomes = c("heart attack", "heart failure", "pneumonia")
if(outcome %in% outcomes == FALSE) {
stop("invalid outcome")
}
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")}
data <- data[c(2, 7, 11, 17, 23)]
names(data)[1] <- "name"
names(data)[2] <- "state"
names(data)[3] <- "heart attack"
names(data)[4] <- "heart failure"
names(data)[5] <- "pneumonia"
states <- data[, 2]
states <- unique(states)
if(state %in% states == FALSE ) {
stop("invalid state")
}
clear
clear()
setwd("~/Coursera/The_DataScience_R/02-R_Programming/ProgrammingAssignment03/rprog-data-ProgAssignment3")
best <- function(state, outcome) {
## Validate the outcome string
outcomes = c("heart attack", "heart failure", "pneumonia")
if(outcome %in% outcomes == FALSE) {
stop("invalid outcome")
}
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Filter and simplify the column names
## 2. Hospital Name: varchar (50) Lists the name of the hospital.
## 7. State: varchar (2) Lists the 2 letter State code in which the hospital is located.
## 11. Hospital 30-Day Death (Mortality) Rates from Heart Attack: Lists the risk adjusted rate (percentage) for each hospital.
## 17. Hospital 30-Day Death (Mortality) Rates from Heart Failure: Lists the risk adjusted rate (percentage) for each hospital.
## 23. Hospital 30-Day Death (Mortality) Rates from Pneumonia: Lists the risk adjusted rate (percentage) for each hospital.
data <- data[c(2, 7, 11, 17, 23)]
names(data)[1] <- "name"
names(data)[2] <- "state"
names(data)[3] <- "heart attack"
names(data)[4] <- "heart failure"
names(data)[5] <- "pneumonia"
## Validating the state name given in the input
states <- data[, 2]
states <- unique(states)
if(state %in% states == FALSE ) {
stop("invalid state")
}
## Grab only rows with our state value
data <- data[data$state==state & data[outcome] != 'Not Available',  ]
vals <- data[, outcome]
rowNum <- which.min(vals)
## Return hospital name in that state with lowest 30-day death rate
data[rowNum, ]$name
}
best(AL, pneumonia)
best("AL", "pneumonia")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
best <- function(state, outcome) {
## Validate the outcome string
outcomes = c("heart attack", "heart failure", "pneumonia")
if(outcome %in% outcomes == FALSE) {
stop("invalid outcome")
}
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Filter and simplify the column names
## 2. Hospital Name: varchar (50) Lists the name of the hospital.
## 7. State: varchar (2) Lists the 2 letter State code in which the hospital is located.
## 11. Hospital 30-Day Death (Mortality) Rates from Heart Attack: Lists the risk adjusted rate (percentage) for each hospital.
## 17. Hospital 30-Day Death (Mortality) Rates from Heart Failure: Lists the risk adjusted rate (percentage) for each hospital.
## 23. Hospital 30-Day Death (Mortality) Rates from Pneumonia: Lists the risk adjusted rate (percentage) for each hospital.
data <- data[c(2, 7, 11, 17, 23)]
names(data)[1] <- "name"
names(data)[2] <- "state"
names(data)[3] <- "heart attack"
names(data)[4] <- "heart failure"
names(data)[5] <- "pneumonia"
## Validating the state name given in the input
states <- data[, 2]
states <- unique(states)
if(state %in% states == FALSE ) {
stop("invalid state")
}
## Grab only rows with our state value
data <- data[data$state==state & data[outcome] != 'Not Available',  ]
vals <- data[, outcome]
rowNum <- which.min(vals)
## Return hospital name in that state with lowest 30-day death rate
data[rowNum, ]$name
}
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
